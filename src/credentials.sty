% This file provides the Matrikelnumbers for some people.
% While this is sensitive information, it is not that problematic to have liying around.

% Carsten Shubert, an Admin of the TUB-Informatik Group, has also posted his Matrikelnumber.
% If it is fine for him, it should be fine for me as well.

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{credentials}[2021/06/29]
\RequirePackage{readarray}

\newcommand{\template@credentials@emily@firstName}{Emily}
\newcommand{\template@credentials@emily@lastName}{Seebeck}
\newcommand{\template@credentials@emily@id}{411364}

\newcommand{\template@credentials@michel@firstName}{Michel}
\newcommand{\template@credentials@michel@lastName}{Schnitker}
\newcommand{\template@credentials@michel@id}{?}

\newcommand{\template@credentials@jarne@firstName}{Jarne}
\newcommand{\template@credentials@jarne@lastName}{?}
\newcommand{\template@credentials@jarne@id}{?}

\newcommand{\template@credentials@raphael@firstName}{Raphael}
\newcommand{\template@credentials@raphael@lastName}{?}
\newcommand{\template@credentials@raphael@id}{?}


% This is a command to set the author and id's accordingly.
%  #1 = pgffor list {a, b, c, …} where a, b, c, … are names registered in the database
%      Note: Capitalization matters
\newcommand{\template@credentials@make}[1]{
    \template@credentials@makeauthor{#1}
    \template@credentials@makeHeader{#1}
}

% This command makes - as the name suggests - the author.
% This is done by supplying a pgffor list {a,b,c,…}, where a, b, c,… are names registered in the database
\newcommand{\template@credentials@makeauthor}[1]{
    \foreach[count=\i] \person in #1 {
        \ifnum\i=1
            \xdef\template@credentials@author{\\[-5pt]\template@credentials@makePerson{\person}}
        \else
            \xdef\template@credentials@author{\template@credentials@author\\\template@credentials@makePerson{\person}}
        \fi
    }
    \foreach[count=\i] \person in #1 {
        \ifnum\i=1
            \xdef\template@credentials@ids{\\[-5pt]\csname template@credentials@\person @id\endcsname}
        \else
            \xdef\template@credentials@ids{\template@credentials@ids\\\csname template@credentials@\person @id\endcsname}
        \fi
    }
    \author{\template@credentials@author \and \template@credentials@ids\\[10pt]}
}

% This command makes the firstName / lastName combination of a person.
\newcommand{\template@credentials@makePerson}[1]{
    \csname template@credentials@\person @firstName\endcsname{} \csname template@credentials@\person @lastName\endcsname
}

% This command makes - as the name suggests - the header.
% This is done by supplying a pgffor list {a,b,c,…}, where a, b, c,… are names registered in the database
\newcommand{\template@credentials@makeHeader}[1]{
    \foreach[count=\i] \person in #1 {
        \ifnum\i=1
            \xdef\template@credentials@header{\template@credentials@makePersonHeader{\person}}
        \else
            \xdef\template@credentials@header{\template@credentials@header, \template@credentials@makePersonHeader{\person}}
        \fi
    }
    \fancyhead[L]{\template@credentials@header}
}

% This command makes the firstName / id combination of a person.
\newcommand{\template@credentials@makePersonHeader}[1]{
    \csname template@credentials@\person @firstName\endcsname{} -- \csname template@credentials@\person @id\endcsname
}



